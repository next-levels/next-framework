import { AfterViewInit, ChangeDetectorRef, EventEmitter, OnDestroy, OnInit } from '@angular/core';
import { Observable } from 'rxjs';
import { TranslateService } from '@ngx-translate/core';
import { ActivatedRoute } from '@angular/router';
import { SelectionModel } from '@angular/cdk/collections';
import { MatDialog } from '@angular/material/dialog';
import { ListController } from '../../controllers/ListController';
import { FilterOptions, ListOptions, PaginationMeta } from '../../../../../../shared/generics/src';
export declare class BaseListComponent implements OnInit, OnDestroy, AfterViewInit {
    translateService: TranslateService;
    router: ActivatedRoute;
    _matDialog: MatDialog;
    cdRef: ChangeDetectorRef;
    listController: ListController;
    rowClick: EventEmitter<any>;
    rowDelete: EventEmitter<any>;
    rowExport: EventEmitter<any>;
    rowCreate: EventEmitter<any>;
    modelFacade: any;
    model: any;
    data: any[];
    displayedColumns: string[];
    fields: string[];
    pagination: PaginationMeta;
    filterOptions: FilterOptions;
    selection: SelectionModel<Element>;
    loading$: Observable<boolean>;
    private _unsubscribeAll;
    constructor(translateService: TranslateService, router: ActivatedRoute, _matDialog: MatDialog, cdRef: ChangeDetectorRef);
    ngOnInit(): void;
    ngAfterViewInit(): void;
    getSettingsField(field: string): ListOptions;
    selectRow(row: any): void;
    onDelete(data: any): void;
    onCreate(): void;
    openExport(): void;
    openAddModal(): void;
    trackByFn(index: number, item: any): any;
    ngOnDestroy(): void;
}
