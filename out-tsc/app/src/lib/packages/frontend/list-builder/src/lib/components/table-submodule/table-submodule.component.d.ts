import { AfterViewInit, OnDestroy, OnInit } from '@angular/core';
import { Observable } from 'rxjs';
import { MatPaginator } from '@angular/material/paginator';
import { MatSort } from '@angular/material/sort';
import { FormControl } from '@angular/forms';
import { MatTableDataSource } from '@angular/material/table';
import { Store } from '@ngrx/store';
import { TranslateService } from '@ngx-translate/core';
import { ActivatedRoute } from '@angular/router';
import { ListController } from '../../controllers/ListController';
import { BaseFacadeType, StoreFacade } from '../../../../../generic-store/public_api';
import { FilterOptions, ListOptions, PaginationMeta, ScopeFilter } from '../../../../../../shared/generics/src';
export declare class TableSubmoduleComponent implements OnInit, OnDestroy, AfterViewInit {
    translateService: TranslateService;
    private store;
    private router;
    listController: ListController;
    showHeader: boolean;
    facade: StoreFacade;
    modelDefinition: any;
    scope: ScopeFilter;
    paginator: MatPaginator;
    sort: MatSort;
    loading$: Observable<boolean>;
    private _unsubscribeAll;
    searchInputControl: FormControl;
    displayedColumns: string[];
    fields: string[];
    dataSource: MatTableDataSource<any>;
    modelFacade: BaseFacadeType;
    model: any;
    pagination: PaginationMeta;
    filterOptions: FilterOptions;
    constructor(translateService: TranslateService, store: Store<any>, router: ActivatedRoute);
    ngOnInit(): void;
    ngAfterViewInit(): void;
    getSettingsField(field: string): ListOptions;
    selectRow(row: any): void;
    onDelete(data: any): void;
    openAddModal(): void;
    trackByFn(index: number, item: any): any;
    ngOnDestroy(): void;
}
